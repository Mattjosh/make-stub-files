# An example configuration file for make_stub_files.py.
# By default, this is ~/stubs/make_stub_files.cfg.
# Can be changed using the --config=path command-line option.

[Global]

files:
    
    # Files to be used *only* if no files are given on the command line.
    # glob.glob wildcards are supported.

    # c:/leo.repo/leo-editor/leo/core/leoAst.py
    # c:/leo.repo/leo-editor/leo/core/*.py
    # c:/leo.repo/leo-editor/plugins/*.py
    
output_directory: ~/stubs
    
prefix_lines:
    # Lines to be inserted at the start of each stub file.
    from typing import TypeVar, Iterable, Tuple
    T = TypeVar('T', int, float, complex)

[Arg Types]

# Patterns to be applied both argument lists *and* return values.
# Lines have the form:
#   verbatim-pattern: replacement
# For argument lists, the replacement becomes the annotation.
# For return values, the replacement *replaces* the pattern.

aList: Sequence
aList2: Sequence
c: Commander
i: int
j: int
k: int
node: ast.Ast
p: Position
s: str
s2: str
v: VNode

[Def Name Patterns]

# Regular expressions specifying names of functions or methods.
# Methods names should have the form class_name.method_name.
# These  patterns are matched *before* the patterns in the
# [Return Balanced Patterns] and [Return Regex Patterns] sections.

AstFormatter.do_.*: str
StubTraverser.format_returns: str
StubTraverser.indent: str

[Return Balanced Patterns]

# Balanced patterns to be applied to return expressions.
# Balanced patterns match verbatim, except that the patterns:
#   (*), [*] and {*}
# only match *balanced* parens, square and curly brackets.

repr(*): str
str.join(*): str
str.replace(*): str
str%(*): str
str%str: str

[Return Regex Patterns]

# Regular expression patterns to be applied to return expressions.
# Each line has the form:
#   regex: replacement

.*__name__: str
